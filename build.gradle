plugins {
    id 'java'
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.github.node-gradle.node' version '3.0.1'
}

group = 'pl.edu.pw'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
	mavenCentral()
}

dependencies {
    implementation 'com.auth0:java-jwt:3.14.0'
    implementation 'org.json:json:20210307'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.google.firebase:firebase-admin:7.0.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

node {
    version = '14.16.0'
    npmVersion = '7.6.3'
    distBaseUrl = 'https://nodejs.org/dist'
    download = true
}

task buildFrontend(type: NpmTask) {
    inputs.files(fileTree('node_modules'))
    inputs.files(fileTree('src/main/javascript'))
    inputs.file('.babelrc')
    inputs.file('package.json')
    inputs.file('webpack.common.js')
    inputs.file('webpack.prod.js')

    outputs.dir('src/resources/static/built')

    dependsOn npmInstall
    args = ['run', 'build-prod']
}

test {
	useJUnitPlatform()
}

processResources.dependsOn 'buildFrontend'
